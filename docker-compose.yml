volumes:
  auth_db:
    driver: local
  ticket_db:
    driver: local

services:
    auth-storage:
        image: postgres
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
            - PGPASSWORD=admin
        ports:
            - "5432:5432"
        volumes:
            - auth_db:/var/lib/postgresql/data
            - ./Storage/Auth/createScript.sql:/var/lib/postgresql/createScript.sql
            - ./Storage/Auth/run:/docker-entrypoint-initdb.d
        healthcheck:
            test: "exit 0"
    ticket_storage:
        image: postgres
        environment:
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=admin
            - PGPASSWORD=admin
        ports:
            - "5050:5432"
        volumes:
            - ticket_db:/var/lib/postgresql/data
            - ./Storage/Ticket/ticket.sql:/var/lib/postgresql/ticket.sql
            - ./Storage/Ticket/initial_data:/var/lib/postgresql/initial_data
            - ./Storage/Ticket/run:/docker-entrypoint-initdb.d
    redis:
        restart: on-failure
        image: "redis"
        ports:
          - "6379:6379"
    auth:
        restart: on-failure
        environment:
            - GO111MODULE=off
        build:
            context: ./Auth
            dockerfile: ./Dockerfile
        depends_on:
            auth-storage:
                condition: service_healthy
            redis:
                condition: service_started
    ticket:
        restart: on-failure
        build:
            context: ./Ticket
            dockerfile: ./Dockerfile
    frontend:
        restart: on-failure
        build:
            context: ./Frontend
            dockerfile: ./Dockerfile
        ports:
            - "8000:80"